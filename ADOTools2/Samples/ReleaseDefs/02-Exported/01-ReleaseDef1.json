{
  "source": "restApi",
  "description": null,
  "isDeleted": false,
  "variables": {
    "HostingPlan": {
      "value": "pule2e"
    },
    "ResourceGroupName": {
      "value": "ASPDOTNET"
    },
    "ServerName": {
      "value": "pule2eca927031"
    }
  },
  "variableGroups": [],
  "environments": [
    {
      "name": "Dev",
      "rank": 1,
      "owner": {
        "displayName": "$Owner-DisplayName$",
        "id": "$Owner-Id$",
        "uniqueName": "$Owner-UniqueName$"
      },
      "variables": {
        "WebsiteName": {
          "value": "pule2eca927031"
        }
      },
      "variableGroups": [],
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false
          }
        ]
      },
      "deployStep": {
        "id": 5
      },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false
          }
        ]
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": "none"
            },
            "agentSpecification": null,
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": []
            },
            "queueId": "",
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": "agentBasedDeployment",
          "name": "Dev",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Azure Deployment",
              "refName": "AzureResourceGroupDeployment1",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(ResourceGroupName)",
                "location": "Central US",
                "templateLocation": "Linked artifact",
                "csmFileLink": "",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/PartsUnlimitedE2E/drop/PartsUnlimited-aspnet45/env/PartsUnlimitedEnv/Templates/FullEnvironmentSetupMerged.json",
                "csmParametersFile": "$(System.DefaultWorkingDirectory)/PartsUnlimitedE2E/drop/PartsUnlimited-aspnet45/env/PartsUnlimitedEnv/Templates/FullEnvironmentSetupMerged.param.json",
                "overrideParameters": "-WebsiteName $(WebsiteName) -PUL_ServerName $(ServerName)  -PUL_HostingPlanName $(HostingPlan)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "outputVariable": ""
              }
            },
            {
              "environment": {},
              "taskId": "497d490f-eea7-4f2b-ab94-48d9c1acdcb1",
              "version": "3.*",
              "name": "Azure App Service Deploy",
              "refName": "AzureRmWebAppDeployment2",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "",
                "WebAppName": "$(WebsiteName)",
                "WebAppKind": "app",
                "DeployToSlotFlag": "true",
                "ImageSource": "Registry",
                "ResourceGroupName": "$(ResourceGroupName)",
                "SlotName": "Dev",
                "AzureContainerRegistry": "",
                "AzureContainerRegistryLoginServer": "",
                "AzureContainerRegistryImage": "",
                "AzureContainerRegistryTag": "",
                "DockerRepositoryAccess": "public",
                "RegistryConnectedServiceName": "",
                "PrivateRegistryImage": "",
                "PrivateRegistryTag": "",
                "DockerNamespace": "",
                "DockerRepository": "",
                "DockerImageTag": "",
                "VirtualApplication": "",
                "Package": "$(System.DefaultWorkingDirectory)/PartsUnlimitedE2E/drop/PartsUnlimitedWebsite.zip",
                "BuiltinLinuxPackage": "$(System.DefaultWorkingDirectory)/**/*.zip",
                "RuntimeStack": "node|4.4",
                "StartupCommand": "",
                "WebAppUri": "",
                "ScriptType": "",
                "InlineScript": ":: You can provide your deployment commands here. One command per line.",
                "ScriptPath": "",
                "GenerateWebConfig": "false",
                "WebConfigParameters": "",
                "AppSettings": "",
                "TakeAppOfflineFlag": "false",
                "UseWebDeploy": "false",
                "SetParametersFile": "",
                "RemoveAdditionalFilesFlag": "false",
                "ExcludeFilesFromAppDataFlag": "false",
                "AdditionalArguments": "",
                "RenameFilesFlag": "false",
                "XmlTransformation": "false",
                "XmlVariableSubstitution": "false",
                "JSONFiles": ""
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": false,
        "badgeEnabled": false,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [],
      "conditions": [
        {
          "name": "ReleaseStarted",
          "conditionType": "event",
          "value": ""
        }
      ],
      "executionPolicy": {
        "concurrencyCount": 0,
        "queueDepthCount": 0
      },
      "schedules": [],
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {},
      "properties": {},
      "preDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "postDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "environmentTriggers": []
    },
    {
      "name": "QA",
      "rank": 2,
      "owner": {
        "displayName": "$Owner-DisplayName$",
        "id": "$Owner-Id$",
        "uniqueName": "$Owner-UniqueName$"
      },
      "variables": {
        "WebsiteName": {
          "value": "pule2eca927031"
        }
      },
      "variableGroups": [],
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false
          }
        ]
      },
      "deployStep": {
        "id": 6
      },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false
          }
        ]
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": "none"
            },
            "agentSpecification": null,
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": []
            },
            "queueId": "",
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": "agentBasedDeployment",
          "name": "QA",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "497d490f-eea7-4f2b-ab94-48d9c1acdcb1",
              "version": "3.*",
              "name": "Azure App Service Deploy",
              "refName": "AzureRmWebAppDeployment1",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "",
                "WebAppName": "$(WebsiteName)",
                "WebAppKind": "app",
                "DeployToSlotFlag": "true",
                "ImageSource": "Registry",
                "ResourceGroupName": "$(ResourceGroupName)",
                "SlotName": "Staging",
                "AzureContainerRegistry": "",
                "AzureContainerRegistryLoginServer": "",
                "AzureContainerRegistryImage": "",
                "AzureContainerRegistryTag": "",
                "DockerRepositoryAccess": "public",
                "RegistryConnectedServiceName": "",
                "PrivateRegistryImage": "",
                "PrivateRegistryTag": "",
                "DockerNamespace": "",
                "DockerRepository": "",
                "DockerImageTag": "",
                "VirtualApplication": "",
                "Package": "$(System.DefaultWorkingDirectory)/PartsUnlimitedE2E/drop/PartsUnlimitedWebsite.zip",
                "BuiltinLinuxPackage": "$(System.DefaultWorkingDirectory)/**/*.zip",
                "RuntimeStack": "node|4.4",
                "StartupCommand": "",
                "WebAppUri": "",
                "ScriptType": "",
                "InlineScript": ":: You can provide your deployment commands here. One command per line.",
                "ScriptPath": "",
                "GenerateWebConfig": "false",
                "WebConfigParameters": "",
                "AppSettings": "",
                "TakeAppOfflineFlag": "false",
                "UseWebDeploy": "false",
                "SetParametersFile": "",
                "RemoveAdditionalFilesFlag": "false",
                "ExcludeFilesFromAppDataFlag": "false",
                "AdditionalArguments": "",
                "RenameFilesFlag": "false",
                "XmlTransformation": "false",
                "XmlVariableSubstitution": "false",
                "JSONFiles": ""
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": false,
        "badgeEnabled": false,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [],
      "conditions": [
        {
          "name": "Dev",
          "conditionType": "environmentState",
          "value": "4"
        }
      ],
      "executionPolicy": {
        "concurrencyCount": 0,
        "queueDepthCount": 0
      },
      "schedules": [],
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {},
      "properties": {},
      "preDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "postDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "environmentTriggers": []
    },
    {
      "name": "Production",
      "rank": 3,
      "owner": {
        "displayName": "$Owner-DisplayName$",
        "id": "$Owner-Id$",
        "uniqueName": "$Owner-UniqueName$"
      },
      "variables": {
        "WebsiteName": {
          "value": "pule2eca927031"
        }
      },
      "variableGroups": [],
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false
          }
        ]
      },
      "deployStep": {
        "id": 4
      },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false
          }
        ]
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": "none"
            },
            "agentSpecification": null,
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": []
            },
            "queueId": "",
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": "agentBasedDeployment",
          "name": "Production",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "497d490f-eea7-4f2b-ab94-48d9c1acdcb1",
              "version": "3.*",
              "name": "Azure App Service Deploy",
              "refName": "AzureRmWebAppDeployment1",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "",
                "WebAppName": "$(WebsiteName)",
                "WebAppKind": "app",
                "DeployToSlotFlag": "false",
                "ImageSource": "Registry",
                "ResourceGroupName": "",
                "SlotName": "",
                "AzureContainerRegistry": "",
                "AzureContainerRegistryLoginServer": "",
                "AzureContainerRegistryImage": "",
                "AzureContainerRegistryTag": "",
                "DockerRepositoryAccess": "public",
                "RegistryConnectedServiceName": "",
                "PrivateRegistryImage": "",
                "PrivateRegistryTag": "",
                "DockerNamespace": "",
                "DockerRepository": "",
                "DockerImageTag": "",
                "VirtualApplication": "",
                "Package": "$(System.DefaultWorkingDirectory)/PartsUnlimitedE2E/drop/PartsUnlimitedWebsite.zip",
                "BuiltinLinuxPackage": "$(System.DefaultWorkingDirectory)/**/*.zip",
                "RuntimeStack": "node|4.4",
                "StartupCommand": "",
                "WebAppUri": "",
                "ScriptType": "",
                "InlineScript": ":: You can provide your deployment commands here. One command per line.",
                "ScriptPath": "",
                "GenerateWebConfig": "false",
                "WebConfigParameters": "",
                "AppSettings": "",
                "TakeAppOfflineFlag": "false",
                "UseWebDeploy": "false",
                "SetParametersFile": "",
                "RemoveAdditionalFilesFlag": "false",
                "ExcludeFilesFromAppDataFlag": "false",
                "AdditionalArguments": "",
                "RenameFilesFlag": "false",
                "XmlTransformation": "false",
                "XmlVariableSubstitution": "false",
                "JSONFiles": ""
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": false,
        "badgeEnabled": false,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [],
      "conditions": [
        {
          "name": "QA",
          "conditionType": "environmentState",
          "value": "4"
        }
      ],
      "executionPolicy": {
        "concurrencyCount": 0,
        "queueDepthCount": 0
      },
      "schedules": [],
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {},
      "properties": {},
      "preDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "postDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "environmentTriggers": []
    }
  ],
  "artifacts": [
    {
      "sourceId": "$Project-Id$:$BuildDefinition:\\Demo\\Migrations\\PartsUnlimited\\PartsUnlimitedE2E-Id$",
      "type": "Build",
      "alias": "PartsUnlimitedE2E",
      "definitionReference": {
        "defaultVersionType": {
          "id": "latestType",
          "name": "Latest"
        },
        "definition": {
          "id": "$BuildDefinition:\\Demo\\Migrations\\PartsUnlimited\\PartsUnlimitedE2E-Id$",
          "name": "PartsUnlimitedE2E"
        },
        "project": {
          "id": "$Project-Id$",
          "name": "$Project$"
        }
      },
      "isPrimary": true,
      "isRetained": false
    }
  ],
  "triggers": [
    {
      "artifactAlias": "PartsUnlimitedE2E",
      "triggerConditions": [],
      "triggerType": "artifactSource"
    }
  ],
  "releaseNameFormat": "Release-$(rev:r)",
  "tags": [],
  "properties": {},
  "name": "PartsUnlimitedE2E",
  "path": "\\Demo\\Migrations\\PartsUnlimited\\",
  "projectReference": null
}